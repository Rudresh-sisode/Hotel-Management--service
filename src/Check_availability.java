
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rudr'a
 */
public class Check_availability extends javax.swing.JFrame {

    /**
     * Creates new form Check_availability
     */
    public Check_availability() {
          this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        initComponents();
        setIcon();
          Update_patient_table();
    }
    public Check_availability(String a,String b)
    {
          this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        initComponents();
        setIcon();
          Update_patient_table();
        name_txt.setText(a);
        Id_txt.setText(b);
    }
     public void setIcon()
    {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("HotelIcon.png")));
    }
    public void Update_patient_table()
    {
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    conn=JavaConnect.ConnectDB();
        try
        {
            /*
            update table
            */
         String sql="select * from Availability";
            //String sql="select * from Billing order by Bill_No";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            OkTable.setModel(DbUtils.resultSetToTableModel(rs));
           // rs=pst.executeQuery();

        }
         catch(SQLException e)
         {
             JOptionPane.showMessageDialog(null,"Exception 8 "+e);
         }
        finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Select_txt = new javax.swing.JComboBox<>();
        search_txt = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        update_btn = new javax.swing.JButton();
        delete_Btn = new javax.swing.JButton();
        new_btn = new javax.swing.JButton();
        Save_btn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mobile_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Id_txt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        OkTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ava_txt = new javax.swing.JComboBox<>();
        name_txt = new javax.swing.JTextField();
        Back_btn = new javax.swing.JButton();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Check Availability Window");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Select_txt.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        Select_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Name", "ID" }));
        Select_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_txtActionPerformed(evt);
            }
        });
        getContentPane().add(Select_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 130, 30));

        search_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(search_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 330, 30));

        search_btn.setBackground(new java.awt.Color(0, 204, 0));
        search_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        search_btn.setText("Search");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });
        getContentPane().add(search_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 30, -1, 30));

        update_btn.setBackground(new java.awt.Color(255, 255, 0));
        update_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        update_btn.setText("Update");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 30, -1, 30));

        delete_Btn.setBackground(new java.awt.Color(255, 0, 0));
        delete_Btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        delete_Btn.setText("Delete");
        delete_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_BtnActionPerformed(evt);
            }
        });
        getContentPane().add(delete_Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 30, -1, 30));

        new_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        new_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New Topic_48px.png"))); // NOI18N
        new_btn.setText("New");
        new_btn.setBorder(null);
        new_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_btnActionPerformed(evt);
            }
        });
        getContentPane().add(new_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 80, 100, 30));

        Save_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        Save_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Opened Folder_48px.png"))); // NOI18N
        Save_btn.setText("Save");
        Save_btn.setBorder(null);
        Save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_btnActionPerformed(evt);
            }
        });
        getContentPane().add(Save_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 80, 100, 30));

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel7.setText("Availability");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, -1, 30));

        mobile_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(mobile_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 290, 30));

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel4.setText("Customer ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 130, -1, 30));

        Id_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(Id_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 130, 160, 30));

        OkTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        OkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        OkTable.setRowHeight(20);
        OkTable.setRowMargin(2);
        OkTable.setSelectionBackground(new java.awt.Color(0, 204, 0));
        jScrollPane1.setViewportView(OkTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 890, 310));

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Priyanka Palace");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 230, 30));

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 3, 48)); // NOI18N
        jLabel2.setText("Check Availability");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 510, 70));

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel8.setText("Customer Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, 30));

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel9.setText("Mobile");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, -1, 30));

        ava_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        ava_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Yes", "No" }));
        getContentPane().add(ava_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 110, 30));

        name_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(name_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 330, 30));

        Back_btn.setBackground(new java.awt.Color(51, 102, 255));
        Back_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        Back_btn.setText("Back");
        Back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_btnActionPerformed(evt);
            }
        });
        getContentPane().add(Back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 310, -1, 30));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/497320.jpg"))); // NOI18N
        image.setText("jLabel1");
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Select_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Select_txtActionPerformed

    private void delete_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_BtnActionPerformed
        // TODO add your handling code here:
        
        Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        if(search_txt.getText().isEmpty())
        {
            JOptionPane.showConfirmDialog(null, "Please Search !");
        }
        else
        {
            try
            {
                
                
                switch (Select_txt.getSelectedItem().toString()) {
                    case "Name":
                        {
                            String delete_sql="delete from Availability where Name='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(delete_sql);
                            int p=JOptionPane.showConfirmDialog(null,"Do you want to Delete","Conform Delete",JOptionPane.YES_NO_OPTION);
                            if(p==0)
                            {
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Deleted");
                            }   break;
                        }
                    case "ID":
                        {
                            String delete_sql="delete from Availability where ID='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(delete_sql);
                            int p=JOptionPane.showConfirmDialog(null,"Do you want to Delete","Conform Delete",JOptionPane.YES_NO_OPTION);
                            if(p==0)
                            {
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Deleted");
                            }   break;
                        }
                    default:
                        JOptionPane.showMessageDialog(null, "Please Click on Select Field !");
                        break;
                }
            }
            catch(HeadlessException | SQLException Ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occured\n"+Ex);
            }
            finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }

        }
    }//GEN-LAST:event_delete_BtnActionPerformed

    private void Save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_btnActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        
        if(name_txt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter name");
        }
        else if(Id_txt.getText().isEmpty())
        {
                 JOptionPane.showMessageDialog(null, "Please enter ID");
        }
        else if(mobile_txt.getText().isEmpty())
        {
                 JOptionPane.showMessageDialog(null, "Please enter Mobile Number");
        }
        else if(ava_txt.getSelectedItem().toString().equals("Select"))
        {
            JOptionPane.showMessageDialog(null, "Please Click on Availability !");
        }
        else
        {
            try
            {
                 String insert_sql="insert into Availability values(?,?,?,?)";
             pst=conn.prepareStatement(insert_sql);
            pst.setString(1, name_txt.getText());
            pst.setString(2, Id_txt.getText());
            pst.setString(3, mobile_txt.getText());
            pst.setString(4, ava_txt.getSelectedItem().toString());
           
            
            int p=JOptionPane.showConfirmDialog(null,"Do you want to save","Conform Save",JOptionPane.YES_NO_OPTION);
             if(p==0)
             { 
              pst.execute();
             JOptionPane.showMessageDialog(null, "Saved");  
        Update_patient_table();
             }
            }
            catch(HeadlessException | SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occred\n"+ex);
            }
             finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
        }
    }//GEN-LAST:event_Save_btnActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:
           Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        if(search_txt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Search !");
        }
        else
        {
            try
            {
                if(Select_txt.getSelectedItem().toString().equals("Name"))
                {
                   String sql="select * from Availability where Name=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,search_txt.getText());
                rs=pst.executeQuery();
                if(rs.next())
                {
                    String a=rs.getString("Name");
                    name_txt.setText(a);
                    String b=rs.getString("ID");
                    Id_txt.setText(b);
                    String c=rs.getString("Mobile");
                    mobile_txt.setText(c);
                    String d=rs.getString("Available");
                    ava_txt.setSelectedItem(d);
                
                } 
                else
                {
                    JOptionPane.showMessageDialog(null, "Sorry No Result !");
                }
                }
                else if(Select_txt.getSelectedItem().toString().equals("ID"))
                {
                      String sql="select * from Availability where ID=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,search_txt.getText());
                rs=pst.executeQuery();
                if(rs.next())
                {
                    String a=rs.getString("Name");
                    name_txt.setText(a);
                    String b=rs.getString("ID");
                    Id_txt.setText(b);
                    String c=rs.getString("Mobile");
                    mobile_txt.setText(c);
                    String d=rs.getString("Available");
                    ava_txt.setSelectedItem(d);
                
                } 
                else
                {
                    JOptionPane.showMessageDialog(null, "Sorry No Result !");
                }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please click on Select Field !");
                }
            }
            catch(HeadlessException | SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occured\n"+ex);

            }
            finally
        {
            try
            {
                if(rs!=null)
                {
                    rs.close();
                    
                }
                if(conn!=null)
                {
                    conn.close();
                }
                if(pst!=null)
                {
                    pst.close();
                }
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, "Connection not has been closed yet");
            }
        }
        }
    }//GEN-LAST:event_search_btnActionPerformed

    private void new_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_btnActionPerformed
        // TODO add your handling code here:
        Select_txt.setSelectedIndex(0);
        search_txt.setText("");
        name_txt.setText("");
        Id_txt.setText("");
        mobile_txt.setText("");
        ava_txt.setSelectedIndex(0);
        Update_patient_table();
    }//GEN-LAST:event_new_btnActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        String a=name_txt.getText();
        String b=Id_txt.getText();
        String c=mobile_txt.getText();
        String d=ava_txt.getSelectedItem().toString();
        if(search_txt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Search !");
        }
        else
        {
            try
            {
                if(Select_txt.getSelectedItem().toString().equals("Name"))
                {
                    String update_sql="update Availability set Name='"+a+"',ID='"+b+"',Mobile='"+c+"',Available='"+d+"' where Name='"+search_txt.getText()+"'";
                    pst=conn.prepareStatement(update_sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Update Successfully");
                }
                else if(Select_txt.getSelectedItem().toString().equals("ID"))
                {
                     String update_sql="update Availability set Name='"+a+"',ID='"+b+"',Mobile='"+c+"',Available='"+d+"' where ID='"+search_txt.getText()+"'";
                    pst=conn.prepareStatement(update_sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Update Successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please Click on Select Field !");
                }
            }
            catch(HeadlessException | SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occured\n"+ex);
            }
            finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
        }
    }//GEN-LAST:event_update_btnActionPerformed

    private void Back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_btnActionPerformed
        // TODO add your handling code here:
        new Living_Facility().setVisible(true);
        dispose();
    }//GEN-LAST:event_Back_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Check_availability.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Check_availability.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Check_availability.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Check_availability.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Check_availability().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_btn;
    private javax.swing.JTextField Id_txt;
    private javax.swing.JTable OkTable;
    private javax.swing.JButton Save_btn;
    private javax.swing.JComboBox<String> Select_txt;
    private javax.swing.JComboBox<String> ava_txt;
    private javax.swing.JButton delete_Btn;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobile_txt;
    private javax.swing.JTextField name_txt;
    private javax.swing.JButton new_btn;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_txt;
    private javax.swing.JButton update_btn;
    // End of variables declaration//GEN-END:variables
}
