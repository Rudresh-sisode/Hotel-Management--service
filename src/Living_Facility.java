
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rudr'a
 */
public class Living_Facility extends javax.swing.JFrame {

    /**
     * Creates new form Living_Facility
     */
   
    public Living_Facility() {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        initComponents();
        setIcon();
        Update_patient_table();
    }
    public Living_Facility(String a,String b)
    {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
         initComponents();
         setIcon();
         name_txt.setText(a);
         Id_txt.setText(b);
         Update_patient_table();
    }
     public void setIcon()
    {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("HotelIcon.png")));
    }
public void Update_patient_table()
    {
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    conn=JavaConnect.ConnectDB();
        try
        {
            /*
            update table
            */
         String sql="select * from Facility";
            //String sql="select * from Billing order by Bill_No";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            Ok_table.setModel(DbUtils.resultSetToTableModel(rs));
           // rs=pst.executeQuery();

        }
         catch(SQLException e)
         {
             JOptionPane.showMessageDialog(null,"Exception 8 "+e);
         }
        finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ok_table = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        name_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Id_txt = new javax.swing.JTextField();
        save_btn = new javax.swing.JButton();
        new_btn = new javax.swing.JButton();
        select_txt = new javax.swing.JComboBox<>();
        search_txt = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        update_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dinner_txt = new javax.swing.JComboBox<>();
        break_fast_txt = new javax.swing.JComboBox<>();
        meal_txt = new javax.swing.JComboBox<>();
        All_Days = new javax.swing.JComboBox<>();
        Back_btn = new javax.swing.JButton();
        image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Living Facility");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 3, 48)); // NOI18N
        jLabel2.setText("Living Facility");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 420, 70));

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Priyanka Palace");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 230, 30));

        Ok_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Ok_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Ok_table.setRowHeight(20);
        Ok_table.setRowMargin(2);
        Ok_table.setSelectionBackground(new java.awt.Color(0, 204, 0));
        jScrollPane1.setViewportView(Ok_table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 1100, 240));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel6.setText("All Day");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, -1, 30));

        name_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(name_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 330, 30));

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel4.setText("Customer ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 130, -1, 30));

        Id_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(Id_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 130, 160, 30));

        save_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        save_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Opened Folder_48px.png"))); // NOI18N
        save_btn.setText("Save");
        save_btn.setBorder(null);
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });
        getContentPane().add(save_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 80, 100, 30));

        new_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        new_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New Topic_48px.png"))); // NOI18N
        new_btn.setText("New");
        new_btn.setBorder(null);
        new_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_btnActionPerformed(evt);
            }
        });
        getContentPane().add(new_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 80, 100, 30));

        select_txt.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        select_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Name", "ID" }));
        select_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_txtActionPerformed(evt);
            }
        });
        getContentPane().add(select_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 130, 30));

        search_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        getContentPane().add(search_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 330, 30));

        search_btn.setBackground(new java.awt.Color(0, 204, 0));
        search_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        search_btn.setText("Search");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });
        getContentPane().add(search_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 30, -1, 30));

        update_btn.setBackground(new java.awt.Color(255, 255, 0));
        update_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        update_btn.setText("Update");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 30, -1, 30));

        delete_btn.setBackground(new java.awt.Color(255, 0, 0));
        delete_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        delete_btn.setText("Delete");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        getContentPane().add(delete_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 30, -1, 30));

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel7.setText("Customer Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, 30));

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel8.setText("Break Fast");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 200, -1, 30));

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel9.setText("Meal");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, -1, 30));

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel10.setText("Dinner");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, -1, 30));

        dinner_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        dinner_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Yes", "No" }));
        getContentPane().add(dinner_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 110, 30));

        break_fast_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        break_fast_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Yes", "No" }));
        getContentPane().add(break_fast_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 110, 30));

        meal_txt.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        meal_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Yes", "No" }));
        getContentPane().add(meal_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, 110, 30));

        All_Days.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        All_Days.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Yes", "No" }));
        getContentPane().add(All_Days, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 380, 110, 30));

        Back_btn.setBackground(new java.awt.Color(51, 102, 255));
        Back_btn.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        Back_btn.setText("Back");
        Back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_btnActionPerformed(evt);
            }
        });
        getContentPane().add(Back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 410, -1, 30));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/497320.jpg"))); // NOI18N
        image.setText("jLabel1");
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void select_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_txtActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        String aa=name_txt.getText();
        String bb=Id_txt.getText();
        if(name_txt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Enter Name");
        }
        else if(Id_txt.getText().isEmpty())
        {
              JOptionPane.showMessageDialog(null, "Please Enter ID");
        }
        else if(break_fast_txt.getSelectedItem().toString().equals("Select"))
        {
              JOptionPane.showMessageDialog(null, "Please Select Break Fast !");
        }
        else if(meal_txt.getSelectedItem().toString().equals("Select"))
        {
              JOptionPane.showMessageDialog(null, "Please Select Meal !");
        }
        else if(dinner_txt.getSelectedItem().toString().equals("Select"))
        {
              JOptionPane.showMessageDialog(null, "Please Select Meal!");
        }
        else if(All_Days.getSelectedItem().toString().equals("Select"))
        {
              JOptionPane.showMessageDialog(null, "Please Select all day( yes or not )!");
        }
        else
        {
             try
        {
            String insert_sql="insert into Facility values(?,?,?,?,?,?)";
             pst=conn.prepareStatement(insert_sql);
            pst.setString(1, name_txt.getText());
            pst.setString(2, Id_txt.getText());
            pst.setString(3, break_fast_txt.getSelectedItem().toString());
            pst.setString(4, meal_txt.getSelectedItem().toString());
            pst.setString(5, dinner_txt.getSelectedItem().toString());
            pst.setString(6, All_Days.getSelectedItem().toString());
            
            int p=JOptionPane.showConfirmDialog(null,"Do you want to save","Conform Save",JOptionPane.YES_NO_OPTION);
             if(p==0)
             { 
              pst.execute();
             JOptionPane.showMessageDialog(null, "Saved");  
        Update_patient_table();
        new Check_availability(name_txt.getText(),Id_txt.getText()).setVisible(true);
        dispose();
            
             }
        }
        catch(HeadlessException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Sorry Error Occured !\n"+ex);
        }
         finally
        {
            try
            {
                if(rs!=null)
                {
                    rs.close();
                    
                }
                if(conn!=null)
                {
                    conn.close();
                }
                if(pst!=null)
                {
                    pst.close();
                }
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, "Connection not has been closed yet");
            }
        }
        }
       
    }//GEN-LAST:event_save_btnActionPerformed

    private void new_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_btnActionPerformed
        // TODO add your handling code here:
        select_txt.setSelectedIndex(0);
        search_txt.setText("");
        name_txt.setText("");
        Id_txt.setText("");
        break_fast_txt.setSelectedIndex(0);
        meal_txt.setSelectedIndex(0);
        dinner_txt.setSelectedIndex(0);
        All_Days.setSelectedIndex(0);
        Update_patient_table();
    }//GEN-LAST:event_new_btnActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();    
        try
        {
             
    switch (select_txt.getSelectedItem().toString()) {
        case "Name":
            {
                String sql="select * from Facility where Name=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,search_txt.getText());
                rs=pst.executeQuery();
                if(rs.next())
                {
                    String a=rs.getString("Name");
                    name_txt.setText(a);
                    String b=rs.getString("ID");
                    Id_txt.setText(b);
                    String c=rs.getString("Fast");
                    break_fast_txt.setSelectedItem(c);
                    String d=rs.getString("Meal");
                    meal_txt.setSelectedItem(d);
                    String e=rs.getString("Dinner");
                    dinner_txt.setSelectedItem(e);
                    String f=rs.getString("AllDay");
                    All_Days.setSelectedItem(f);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Sorry No Result");
                }
                break;
            }
        case "ID":
            {
                String sql="select * from Facility where ID=?";
                pst=conn.prepareStatement(sql);
                pst.setString(1,search_txt.getText());
                rs=pst.executeQuery();
                if(rs.next())
                {
                    String a=rs.getString("Name");
                    name_txt.setText(a);
                    String b=rs.getString("ID");
                    Id_txt.setText(b);
                    String c=rs.getString("Fast");
                    break_fast_txt.setSelectedItem(c);
                    String d=rs.getString("Meal");
                    meal_txt.setSelectedItem(d);
                    String e=rs.getString("Dinner");
                    dinner_txt.setSelectedItem(e);
                    String f=rs.getString("AllDay");
                    All_Days.setSelectedItem(f);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Sorry No Result");
                }
                break;
            }
        default:
            JOptionPane.showMessageDialog(null, "Please Search !");
            break;
    }
        }
        catch(HeadlessException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Sorry Error Occured\n !"+ex);
        }
         finally
        {
            try
            {
                if(rs!=null)
                {
                    rs.close();
                    
                }
                if(conn!=null)
                {
                    conn.close();
                }
                if(pst!=null)
                {
                    pst.close();
                }
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, "Connection not has been closed yet");
            }
        }
       
    }//GEN-LAST:event_search_btnActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        String a=name_txt.getText();
        String b=Id_txt.getText();
        String c=break_fast_txt.getSelectedItem().toString();
        String d=meal_txt.getSelectedItem().toString();
        String e=dinner_txt.getSelectedItem().toString();
        String f=All_Days.getSelectedItem().toString();
        
        if(search_txt.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please search  !");
        }
        else
        {
            try
            {
                switch (select_txt.getSelectedItem().toString()) {
                    case "Name":
                        {
                            String update_sql="update Facility set Name='"+a+"',ID='"+b+"',Fast='"+c+"',Meal='"+d+"',Dinner='"+e+"',AllDay='"+f+"' where Name='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(update_sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Update Successfully");
                            break;
                        }
                    case "ID":
                        {
                            String update_sql="update Facility set Name='"+a+"',ID='"+b+"',Fast='"+c+"',Meal='"+d+"',Dinner='"+e+"',AllDay='"+f+"' where ID='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(update_sql);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Update Successfully");
                            break;
                        }
                    default:
                        JOptionPane.showMessageDialog(null, "Sorry No-Result");
                        break;
                }
            }
            catch(HeadlessException | SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occured\n"+ex);
            }
            finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
            
        }
    }//GEN-LAST:event_update_btnActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed

        // TODO add your handling code here:
        
        
         Connection conn=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        conn=JavaConnect.ConnectDB();
        if(search_txt.getText().isEmpty())
        {
            JOptionPane.showConfirmDialog(null, "Please Search !");
        }
        else
        {
            try
            {
                
                
                switch (select_txt.getSelectedItem().toString()) {
                    case "Name":
                        {
                            String delete_sql="delete from Facility where Name='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(delete_sql);
                            int p=JOptionPane.showConfirmDialog(null,"Do you want to Delete","Conform Delete",JOptionPane.YES_NO_OPTION);
                            if(p==0)
                            {
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Deleted");
                            }   break;
                        }
                    case "ID":
                        {
                            String delete_sql="delete from Facility where ID='"+search_txt.getText()+"'";
                            pst=conn.prepareStatement(delete_sql);
                            int p=JOptionPane.showConfirmDialog(null,"Do you want to Delete","Conform Delete",JOptionPane.YES_NO_OPTION);
                            if(p==0)
                            {
                                pst.execute();
                                JOptionPane.showMessageDialog(null, "Deleted");
                            }   break;
                        }
                    default:
                        JOptionPane.showMessageDialog(null, "Please Click on Select Field !");
                        break;
                }
            }
            catch(HeadlessException | SQLException Ex)
            {
                JOptionPane.showMessageDialog(null, "Sorry Error Occured\n"+Ex);
            }
            finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }

        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void Back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_btnActionPerformed
        // TODO add your handling code here:
        new Registration().setVisible(true);
        dispose();
    }//GEN-LAST:event_Back_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Living_Facility.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Living_Facility.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Living_Facility.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Living_Facility.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Living_Facility().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> All_Days;
    private javax.swing.JButton Back_btn;
    private javax.swing.JTextField Id_txt;
    private javax.swing.JTable Ok_table;
    private javax.swing.JComboBox<String> break_fast_txt;
    private javax.swing.JButton delete_btn;
    private javax.swing.JComboBox<String> dinner_txt;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> meal_txt;
    private javax.swing.JTextField name_txt;
    private javax.swing.JButton new_btn;
    private javax.swing.JButton save_btn;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField search_txt;
    private javax.swing.JComboBox<String> select_txt;
    private javax.swing.JButton update_btn;
    // End of variables declaration//GEN-END:variables
}
